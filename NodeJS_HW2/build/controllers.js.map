{"version":3,"sources":["../controllers/users.js"],"names":["UsersDB","require","getUsers","req","res","next","find","err","users","status","json","createUser","user","body","name","email","phoneNumber","street","city","insert","updateUser","id","params","userId","update","_id","$set","success","deleteUser","remove","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB,C,CAEA;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjCL,EAAAA,OAAO,CAACM,IAAR,CAAa,EAAb,EAAiB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC7BJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AACH,GAFD;AAGH,CAJD,C,CAMA;;;AACA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA;;AACnC,MAAIO,IAAI,gBAAiDT,GAAG,CAACU,IAArD,EAAMC,IAAN,aAAMA,IAAN,EAAYC,KAAZ,aAAYA,KAAZ,EAAmBC,WAAnB,aAAmBA,WAAnB,EAAgCC,MAAhC,aAAgCA,MAAhC,EAAwCC,IAAxC,aAAwCA,IAAxC,YAAR;AAEAlB,EAAAA,OAAO,CAACmB,MAAR,CAAeP,IAAf,EAAqB,YAAM;AACvBR,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,IAArB;AACH,GAFD;AAGH,CAND,C,CAQA;;;AACA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA;;AACnC,MAAIgB,EAAE,GAAGlB,GAAG,CAACmB,MAAJ,CAAWC,MAApB;AACA,MAAIX,IAAI,iBAAiDT,GAAG,CAACU,IAArD,EAAMC,IAAN,cAAMA,IAAN,EAAYC,KAAZ,cAAYA,KAAZ,EAAmBC,WAAnB,cAAmBA,WAAnB,EAAgCC,MAAhC,cAAgCA,MAAhC,EAAwCC,IAAxC,cAAwCA,IAAxC,aAAR;AAEAlB,EAAAA,OAAO,CAACwB,MAAR,CACI;AACIC,IAAAA,GAAG,EAAEJ;AADT,GADJ,EAII;AACIK,IAAAA,IAAI,EAAEd;AADV,GAJJ,EAOI,YAAM;AACFR,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBiB,MAAAA,OAAO,EAAE;AADQ,KAArB;AAGH,GAXL;AAaH,CAjBD,C,CAmBA;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAIgB,EAAE,GAAGlB,GAAG,CAACmB,MAAJ,CAAWC,MAApB;AACAvB,EAAAA,OAAO,CAAC6B,MAAR,CACI;AACIJ,IAAAA,GAAG,EAAEJ;AADT,GADJ,EAII,YAAM;AACFjB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBiB,MAAAA,OAAO,EAAE;AADQ,KAArB;AAGH,GARL;AAUH,CAZD;;AAcAG,MAAM,CAACC,OAAP,GAAiB;AACb7B,EAAAA,QAAQ,EAARA,QADa;AAEbS,EAAAA,UAAU,EAAVA,UAFa;AAGbS,EAAAA,UAAU,EAAVA,UAHa;AAIbQ,EAAAA,UAAU,EAAVA;AAJa,CAAjB","sourcesContent":["const UsersDB = require(\"../models/db\");\r\n\r\n// Get all users details\r\nconst getUsers = (req, res, next) => {\r\n    UsersDB.find({}, (err, users) => {\r\n        res.status(200).json(users);\r\n    });\r\n};\r\n\r\n// Create a new userr\r\nconst createUser = (req, res, next) => {\r\n    let user = ({ name, email, phoneNumber, street, city } = req.body);\r\n\r\n    UsersDB.insert(user, () => {\r\n        res.status(200).json(user);\r\n    });\r\n};\r\n\r\n// Update user.\r\nconst updateUser = (req, res, next) => {\r\n    let id = req.params.userId;\r\n    let user = ({ name, email, phoneNumber, street, city } = req.body);\r\n\r\n    UsersDB.update(\r\n        {\r\n            _id: id\r\n        },\r\n        {\r\n            $set: user\r\n        },\r\n        () => {\r\n            res.status(200).json({\r\n                success: true\r\n            });\r\n        }\r\n    );\r\n};\r\n\r\n// Delete user\r\nconst deleteUser = (req, res, next) => {\r\n    let id = req.params.userId;\r\n    UsersDB.remove(\r\n        {\r\n            _id: id\r\n        },\r\n        () => {\r\n            res.status(200).json({\r\n                success: true\r\n            });\r\n        }\r\n    );\r\n};\r\n\r\nmodule.exports = {\r\n    getUsers,\r\n    createUser,\r\n    updateUser,\r\n    deleteUser\r\n};\r\n"],"file":"controllers.js"}